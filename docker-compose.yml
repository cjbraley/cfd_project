version: "1"

services:
  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    build: spark/
    networks:
      iceberg_net:
    depends_on:
      - rest
      - minio
    volumes:
      - ./infrastructure/warehouse:/home/iceberg/warehouse
      - ./src:/home/iceberg/src
      - ./jobs:/home/iceberg/jobs
      - ./data:/home/iceberg/data
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001
      - 4040-4042:4040-4042
  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    ports:
      - 9001:9001
      - 9000:9000
    command: [ "server", "/data", "--console-address", ":9001" ]
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c " until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done; /usr/bin/mc rm -r --force minio/warehouse; /usr/bin/mc mb minio/warehouse; /usr/bin/mc anonymous set public minio/warehouse; tail -f /dev/null "
  trino:
    image: trinodb/trino:latest
    container_name: trino
    networks:
      iceberg_net:
    ports:
      - 8081:8080
    depends_on:
      - minio
    volumes:
      - ./infrastructure/trino/catalog:/etc/trino/catalog
      - ./infrastructure/trino/trino_config:/etc/trino/conf
    environment:
      - TRINO_NODE_ENVIRONMENT=production
      - TRINO_CONFIG_PROPERTIES=http-server.http.port=8080,discovery.uri=http://trino:8080
      - TRINO_JVM_CONFIG=-server,-Xmx16G,-XX:+UseG1GC,-XX:G1MaxReservePercent=20,-XX:InitiatingHeapOccupancyPercent=75,-XX:+UseGCOverheadLimit,-XX:G1HeapRegionSize=16M,-XX:+ExplicitGCInvokesConcurrent,-XX:+HeapDumpOnOutOfMemoryError,-XX:HeapDumpPath=/var/trino/data/heapdump.hprof

networks:
  iceberg_net:
